# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '4ea3e189-e8d1-4839-a775-89d5b1991785'
  
  # Web app name
  webAppName: 'bzzzt-flask'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'bzzzt-flask'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  pythonVersion: '3.8'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    
    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

# - stage: Deploy
#   displayName: 'Deploy Web App'
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: DeploymentJob
#     pool:
#       vmImage: $(vmImageName)
#     environment: $(environmentName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:
          
#           - task: UsePythonVersion@0
#             inputs:
#               versionSpec: '$(pythonVersion)'
#             displayName: 'Use Python version'

#           - task: AzureWebApp@1
#             displayName: 'Deploy Azure Web App : bzzzt-flask-dev'
#             inputs:
#               azureSubscription: $(azureServiceConnectionId)
#               resourceGroupName: 'richie.lee_rg_Linux_northeurope'
#               appName: $(webAppName)
#               package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
#               startUpCommand: 'startup.txt'
#               appType: webAppLinux
#               deployToSlotOrASE: true
#               slotName: dev
          
          # - task: AzureWebApp@1
          #   displayName: 'Deploy Azure Web App : bzzzt-flask'
          #   inputs:
          #     azureSubscription: $(azureServiceConnectionId)
          #     appName: $(webAppName)
          #     package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
          #     startUpCommand: 'startup.txt'
          #     appType: webAppLinux
          
          # - task: AzureAppServiceManage@0
          #   displayName: 'Swap Slots: bzzzt-flask'
          #   inputs:
          #     azureSubscription: 'Visual Studio Enterprise â€“ MPN (01dc6d60-731c-48ec-997f-6002b76ff010)'
          #     WebAppName: $(webAppName)
          #     ResourceGroupName: 'richie.lee_rg_Linux_northeurope'
          #     SourceSlot: dev

